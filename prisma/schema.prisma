// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"

  url = env("DATABASE_URL")
}

model Meetup {
  id          Int      @id @default(autoincrement())
  location    String
  date        DateTime
  description String
  language    String
  city        String
  createdBy   String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("meetups")
}

model Comment {
  meetupId  Int
  id        Int      @id @default(autoincrement())
  name      String
  comment   String
  date      DateTime @default(now())
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}

model Attendee {
  meetingId Int
  id        Int      @id @default(autoincrement())
  name      String
  mail      String
  phone     String
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("attendees")
}

//auth models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  h            String   @default(cuid()) //TODO just messing around..
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
